// Code generated by goa v3.11.3, DO NOT EDIT.
//
// CharacterService endpoints
//
// Command:
// $ goa gen characters/design

package characterservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "CharacterService" service endpoints.
type Endpoints struct {
	CreateCharacter           goa.Endpoint
	GetCharacter              goa.Endpoint
	UpdateCharacterAttributes goa.Endpoint
	DeleteCharacter           goa.Endpoint
}

// NewEndpoints wraps the methods of the "CharacterService" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateCharacter:           NewCreateCharacterEndpoint(s),
		GetCharacter:              NewGetCharacterEndpoint(s),
		UpdateCharacterAttributes: NewUpdateCharacterAttributesEndpoint(s),
		DeleteCharacter:           NewDeleteCharacterEndpoint(s),
	}
}

// Use applies the given middleware to all the "CharacterService" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateCharacter = m(e.CreateCharacter)
	e.GetCharacter = m(e.GetCharacter)
	e.UpdateCharacterAttributes = m(e.UpdateCharacterAttributes)
	e.DeleteCharacter = m(e.DeleteCharacter)
}

// NewCreateCharacterEndpoint returns an endpoint function that calls the
// method "createCharacter" of service "CharacterService".
func NewCreateCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateCharacterPayload)
		return s.CreateCharacter(ctx, p)
	}
}

// NewGetCharacterEndpoint returns an endpoint function that calls the method
// "getCharacter" of service "CharacterService".
func NewGetCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetCharacterPayload)
		return s.GetCharacter(ctx, p)
	}
}

// NewUpdateCharacterAttributesEndpoint returns an endpoint function that calls
// the method "updateCharacterAttributes" of service "CharacterService".
func NewUpdateCharacterAttributesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateCharacterAttributesPayload)
		return s.UpdateCharacterAttributes(ctx, p)
	}
}

// NewDeleteCharacterEndpoint returns an endpoint function that calls the
// method "deleteCharacter" of service "CharacterService".
func NewDeleteCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteCharacterPayload)
		return s.DeleteCharacter(ctx, p)
	}
}
