// Code generated by goa v3.11.3, DO NOT EDIT.
//
// CharacterService service
//
// Command:
// $ goa gen mpg/characters/design

package characterservice

import (
	"context"
)

// The character service performs CRUD operations for characters and their
// attributes.
type Service interface {
	// CreateCharacter implements createCharacter.
	CreateCharacter(context.Context, *CreateCharacterPayload) (res *Character, err error)
	// GetCharacter implements getCharacter.
	GetCharacter(context.Context, *GetCharacterPayload) (res *Character, err error)
	// UpdateCharacter implements updateCharacter.
	UpdateCharacter(context.Context, *UpdateCharacterPayload) (res int, err error)
	// DeleteCharacter implements deleteCharacter.
	DeleteCharacter(context.Context, *DeleteCharacterPayload) (res int, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "CharacterService"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"createCharacter", "getCharacter", "updateCharacter", "deleteCharacter"}

// Character is the result type of the CharacterService service createCharacter
// method.
type Character struct {
	// UUId of the character
	ID string
	// Name of the character
	Name string
	// Description of the character
	Description string
	// The amount of health value of the character
	Health int
	// The amount of experience value of the character
	Experience int
	// UUId of the inventory record
	InventoryID string
}

// CreateCharacterPayload is the payload type of the CharacterService service
// createCharacter method.
type CreateCharacterPayload struct {
	// Name of the Character
	Name string
	// Description of the Character
	Description *string
}

// DeleteCharacterPayload is the payload type of the CharacterService service
// deleteCharacter method.
type DeleteCharacterPayload struct {
	// UUId of the Character
	ID string
}

// GetCharacterPayload is the payload type of the CharacterService service
// getCharacter method.
type GetCharacterPayload struct {
	// UUId of the Character
	ID string
}

// UpdateCharacterPayload is the payload type of the CharacterService service
// updateCharacter method.
type UpdateCharacterPayload struct {
	// UUId of the Character
	ID string
	// Name of the Character
	Name *string
	// Description of the Character
	Description *string
	// The amount of health value of the Character
	Health *int
	// The amount of experience value of the Character
	Experience *int
}

// Invalid arguments. Required: name  Optional: description
type CreateInvalidArgs string

// Invalid arguments. Required: id
type DeleteInvalidArgs string

// No character matched given criteria
type DeleteNoMatch string

// Invalid arguments. Required: id
type GetInvalidArgs string

// No character matched given criteria
type GetNoMatch string

// Invalid arguments. Required: id  Optional: name, description, health,
// experience
type UpdateInvalidArgs string

// No character matched given criteria
type UpdateNoMatch string

// Error returns an error description.
func (e CreateInvalidArgs) Error() string {
	return "Invalid arguments. Required: name  Optional: description "
}

// ErrorName returns "create_invalid_args".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e CreateInvalidArgs) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "create_invalid_args".
func (e CreateInvalidArgs) GoaErrorName() string {
	return "create_invalid_args"
}

// Error returns an error description.
func (e DeleteInvalidArgs) Error() string {
	return "Invalid arguments. Required: id "
}

// ErrorName returns "delete_invalid_args".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e DeleteInvalidArgs) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "delete_invalid_args".
func (e DeleteInvalidArgs) GoaErrorName() string {
	return "delete_invalid_args"
}

// Error returns an error description.
func (e DeleteNoMatch) Error() string {
	return "No character matched given criteria"
}

// ErrorName returns "delete_no_match".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e DeleteNoMatch) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "delete_no_match".
func (e DeleteNoMatch) GoaErrorName() string {
	return "delete_no_match"
}

// Error returns an error description.
func (e GetInvalidArgs) Error() string {
	return "Invalid arguments. Required: id "
}

// ErrorName returns "get_invalid_args".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e GetInvalidArgs) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "get_invalid_args".
func (e GetInvalidArgs) GoaErrorName() string {
	return "get_invalid_args"
}

// Error returns an error description.
func (e GetNoMatch) Error() string {
	return "No character matched given criteria"
}

// ErrorName returns "get_no_match".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e GetNoMatch) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "get_no_match".
func (e GetNoMatch) GoaErrorName() string {
	return "get_no_match"
}

// Error returns an error description.
func (e UpdateInvalidArgs) Error() string {
	return "Invalid arguments. Required: id  Optional: name, description, health, experience "
}

// ErrorName returns "update_invalid_args".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e UpdateInvalidArgs) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "update_invalid_args".
func (e UpdateInvalidArgs) GoaErrorName() string {
	return "update_invalid_args"
}

// Error returns an error description.
func (e UpdateNoMatch) Error() string {
	return "No character matched given criteria"
}

// ErrorName returns "update_no_match".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e UpdateNoMatch) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "update_no_match".
func (e UpdateNoMatch) GoaErrorName() string {
	return "update_no_match"
}
