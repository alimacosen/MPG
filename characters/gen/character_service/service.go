// Code generated by goa v3.11.3, DO NOT EDIT.
//
// CharacterService service
//
// Command:
// $ goa gen characters/design

package characterservice

import (
	"context"
)

// The character service performs CRUD operations for characters and their
// attributes.
type Service interface {
	// CreateCharacter implements createCharacter.
	CreateCharacter(context.Context, *CreateCharacterPayload) (res *Character, err error)
	// GetCharacter implements getCharacter.
	GetCharacter(context.Context, *GetCharacterPayload) (res *Character, err error)
	// UpdateCharacterAttributes implements updateCharacterAttributes.
	UpdateCharacterAttributes(context.Context, *UpdateCharacterAttributesPayload) (res *Character, err error)
	// DeleteCharacter implements deleteCharacter.
	DeleteCharacter(context.Context, *DeleteCharacterPayload) (res int, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "CharacterService"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"createCharacter", "getCharacter", "updateCharacterAttributes", "deleteCharacter"}

// Character is the result type of the CharacterService service createCharacter
// method.
type Character struct {
	// UUId of the character
	ID string
	// Name of the character
	Name string
	// Description of the character
	Description string
	// The amount of health value of the character
	Health int
	// The amount of experience value of the character
	Experience int
	// UUId of the inventory record
	InventoryID string
}

// CreateCharacterPayload is the payload type of the CharacterService service
// createCharacter method.
type CreateCharacterPayload struct {
	// Name of the Character
	Name string
	// Description of the Character
	Description *string
}

// DeleteCharacterPayload is the payload type of the CharacterService service
// deleteCharacter method.
type DeleteCharacterPayload struct {
	// UUId of the Character
	ID string
}

// GetCharacterPayload is the payload type of the CharacterService service
// getCharacter method.
type GetCharacterPayload struct {
	// UUId of the Character
	ID string
}

// UpdateCharacterAttributesPayload is the payload type of the CharacterService
// service updateCharacterAttributes method.
type UpdateCharacterAttributesPayload struct {
	// UUId of the Character
	ID string
	// Name of the Character
	Name *string
	// Description of the Character
	Description *string
	// The amount of health value of the Character
	Health *int
	// The amount of experience value of the Character
	Experience *int
}

// Invalid arguments. Required: name  Optional: description
type InvalidArgs string

// No character matched given criteria
type NoMatch string

// Error returns an error description.
func (e InvalidArgs) Error() string {
	return "Invalid arguments. Required: name  Optional: description "
}

// ErrorName returns "invalid_args".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InvalidArgs) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "invalid_args".
func (e InvalidArgs) GoaErrorName() string {
	return "invalid_args"
}

// Error returns an error description.
func (e NoMatch) Error() string {
	return "No character matched given criteria"
}

// ErrorName returns "no_match".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e NoMatch) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "no_match".
func (e NoMatch) GoaErrorName() string {
	return "no_match"
}
