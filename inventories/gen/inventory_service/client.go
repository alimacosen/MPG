// Code generated by goa v3.11.3, DO NOT EDIT.
//
// InventoryService client
//
// Command:
// $ goa gen mpg/inventories/design

package inventoryservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "InventoryService" service client.
type Client struct {
	CreateInventoryEndpoint goa.Endpoint
	GetInventoryEndpoint    goa.Endpoint
	UpdateInventoryEndpoint goa.Endpoint
	DeleteInventoryEndpoint goa.Endpoint
}

// NewClient initializes a "InventoryService" service client given the
// endpoints.
func NewClient(createInventory, getInventory, updateInventory, deleteInventory goa.Endpoint) *Client {
	return &Client{
		CreateInventoryEndpoint: createInventory,
		GetInventoryEndpoint:    getInventory,
		UpdateInventoryEndpoint: updateInventory,
		DeleteInventoryEndpoint: deleteInventory,
	}
}

// CreateInventory calls the "createInventory" endpoint of the
// "InventoryService" service.
// CreateInventory may return the following errors:
//   - "create_invalid_args" (type CreateInvalidArgs)
//   - error: internal error
func (c *Client) CreateInventory(ctx context.Context, p *CreateInventoryPayload) (res *Inventory, err error) {
	var ires any
	ires, err = c.CreateInventoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Inventory), nil
}

// GetInventory calls the "getInventory" endpoint of the "InventoryService"
// service.
// GetInventory may return the following errors:
//   - "get_invalid_args" (type GetInvalidArgs)
//   - "get_no_match" (type GetNoMatch)
//   - error: internal error
func (c *Client) GetInventory(ctx context.Context, p *GetInventoryPayload) (res *Inventory, err error) {
	var ires any
	ires, err = c.GetInventoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Inventory), nil
}

// UpdateInventory calls the "updateInventory" endpoint of the
// "InventoryService" service.
// UpdateInventory may return the following errors:
//   - "update_invalid_args" (type UpdateInvalidArgs)
//   - "update_no_match" (type UpdateNoMatch)
//   - error: internal error
func (c *Client) UpdateInventory(ctx context.Context, p *UpdateInventoryPayload) (res int, err error) {
	var ires any
	ires, err = c.UpdateInventoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// DeleteInventory calls the "deleteInventory" endpoint of the
// "InventoryService" service.
// DeleteInventory may return the following errors:
//   - "delete_invalid_args" (type DeleteInvalidArgs)
//   - "delete_no_match" (type DeleteNoMatch)
//   - error: internal error
func (c *Client) DeleteInventory(ctx context.Context, p *DeleteInventoryPayload) (res int, err error) {
	var ires any
	ires, err = c.DeleteInventoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}
