openapi: 3.0.3
info:
    title: Entry Service
    description: HTTP service for a multiple players game
    version: "1.0"
servers:
    - url: http://localhost:8050/mpg
      description: EntryServer hosts the Character, Inventory, Item and swagger services.
paths:
    /character:
        post:
            tags:
                - EntryCharacterService
            summary: createCharacter EntryCharacterService
            operationId: EntryCharacterService#createCharacter
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCharacterRequestBody'
                        example:
                            description: Est numquam quibusdam sunt vero.
                            name: Dicta modi quas placeat eaque.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Character'
                            example:
                                description: Accusamus officiis.
                                experience: 2498843979136799543
                                health: 9128930847587370333
                                id: Tempora dolor.
                                inventoryId: Nobis alias.
                                name: Et quasi omnis omnis.
                "400":
                    description: 'create_invalid_args: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Doloribus voluptas aut possimus molestias accusamus earum.
    /character/{id}:
        delete:
            tags:
                - EntryCharacterService
            summary: deleteCharacter EntryCharacterService
            operationId: EntryCharacterService#deleteCharacter
            parameters:
                - name: id
                  in: path
                  description: UUId of the Character
                  required: true
                  schema:
                    type: string
                    description: UUId of the Character
                    example: Qui ullam molestiae.
                  example: Aliquam rem quo ea necessitatibus.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: integer
                                example: 5682620926064169703
                                format: int64
                            example: 6821726858474368803
                "400":
                    description: 'no_criteria: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Dolorem velit non eos.
                "404":
                    description: 'delete_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Deleniti ullam sunt.
        get:
            tags:
                - EntryCharacterService
            summary: getCharacter EntryCharacterService
            operationId: EntryCharacterService#getCharacter
            parameters:
                - name: id
                  in: path
                  description: UUId of the Character
                  required: true
                  schema:
                    type: string
                    description: UUId of the Character
                    example: Hic vel.
                  example: Maxime cumque laborum.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Character'
                            example:
                                description: Cupiditate aut commodi.
                                experience: 1192529693562691237
                                health: 3442046693883127481
                                id: Quia reprehenderit ipsa omnis ipsam quia reiciendis.
                                inventoryId: Repellat quia est sapiente pariatur omnis.
                                name: Hic aut iste deleniti.
                "400":
                    description: 'get_invalid_args: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Aut magnam eos quod facere vero ut.
                "404":
                    description: 'get_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Cupiditate repudiandae voluptatem sint.
        patch:
            tags:
                - EntryCharacterService
            summary: updateCharacter EntryCharacterService
            operationId: EntryCharacterService#updateCharacter
            parameters:
                - name: id
                  in: path
                  description: UUId of the Character
                  required: true
                  schema:
                    type: string
                    description: UUId of the Character
                    example: Quam explicabo numquam corporis deserunt fuga sit.
                  example: Hic quam culpa nemo.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCharacterRequestBody'
                        example:
                            description: Ut velit vel impedit est et.
                            experience: 4260254307231964385
                            health: 5285512784116714502
                            name: In ut deleniti nesciunt impedit alias voluptatem.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: integer
                                example: 7610669831680270028
                                format: int64
                            example: 9198755721131191524
                "400":
                    description: 'update_invalid_args: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Officia rerum iure sunt esse.
                "404":
                    description: 'update_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Qui fuga dolorem.
    /inventory/{id}:
        get:
            tags:
                - EntryInventoryService
            summary: getInventory EntryInventoryService
            operationId: EntryInventoryService#getInventory
            parameters:
                - name: id
                  in: path
                  description: UUId of the inventory
                  required: true
                  schema:
                    type: string
                    description: UUId of the inventory
                    example: Est deleniti et.
                  example: Quo minus quisquam quia rerum cumque.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Inventory'
                            example:
                                id: Ut incidunt dicta maiores a laborum.
                                itemsId:
                                    - Reprehenderit ea hic ut sunt dolorum.
                                    - Possimus error error sit.
                                    - Modi sint provident corporis.
                                    - Tempora laudantium.
                                userId: Sed harum unde.
                "400":
                    description: 'get_invalid_args: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Voluptates accusantium ratione error molestias eum cupiditate.
                "404":
                    description: 'get_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Blanditiis quis error omnis.
        patch:
            tags:
                - EntryInventoryService
            summary: updateInventory EntryInventoryService
            operationId: EntryInventoryService#updateInventory
            parameters:
                - name: id
                  in: path
                  description: UUId of the Inventory
                  required: true
                  schema:
                    type: string
                    description: UUId of the Inventory
                    example: Perspiciatis aut non laborum enim rerum.
                  example: Recusandae ut unde.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateInventoryRequestBody'
                        example:
                            itemsId:
                                - Fugiat veniam maiores quibusdam nobis natus a.
                                - Tempore qui.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: integer
                                example: 8099162220407970229
                                format: int64
                            example: 2146718516074063828
                "400":
                    description: 'update_invalid_args: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Eos ut.
                "404":
                    description: 'update_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Autem quae maxime mollitia omnis enim.
    /item:
        get:
            tags:
                - EntryItemService
            summary: getItems EntryItemService
            operationId: EntryItemService#getItems
            parameters:
                - name: ids
                  in: query
                  description: List of item IDs separated by commas
                  allowEmptyValue: true
                  schema:
                    type: array
                    items:
                        type: string
                        example: Neque quidem occaecati reiciendis et nihil.
                    description: List of item IDs separated by commas
                    example:
                        - id1
                        - id2
                        - id3
                  example:
                    - id1
                    - id2
                    - id3
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Item'
                                example:
                                    - damage: 82505416867682399
                                      description: Nesciunt maiores voluptas officia ullam debitis excepturi.
                                      healing: 6154713033457490444
                                      id: Nesciunt provident.
                                      name: Molestiae rerum dolorem possimus dolor qui.
                                      protection: 4162510340940445196
                                    - damage: 82505416867682399
                                      description: Nesciunt maiores voluptas officia ullam debitis excepturi.
                                      healing: 6154713033457490444
                                      id: Nesciunt provident.
                                      name: Molestiae rerum dolorem possimus dolor qui.
                                      protection: 4162510340940445196
                            example:
                                - damage: 82505416867682399
                                  description: Nesciunt maiores voluptas officia ullam debitis excepturi.
                                  healing: 6154713033457490444
                                  id: Nesciunt provident.
                                  name: Molestiae rerum dolorem possimus dolor qui.
                                  protection: 4162510340940445196
                                - damage: 82505416867682399
                                  description: Nesciunt maiores voluptas officia ullam debitis excepturi.
                                  healing: 6154713033457490444
                                  id: Nesciunt provident.
                                  name: Molestiae rerum dolorem possimus dolor qui.
                                  protection: 4162510340940445196
                "400":
                    description: 'get_invalid_args: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Adipisci perferendis dolor rem nesciunt qui.
                "404":
                    description: 'get_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Rerum quia.
        post:
            tags:
                - EntryItemService
            summary: createItem EntryItemService
            operationId: EntryItemService#createItem
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateItemRequestBody'
                        example:
                            damage: 1446501656436104991
                            description: Porro excepturi quia tempore esse sapiente.
                            healing: 8469736963636152442
                            name: Pariatur repellendus consequatur.
                            protection: 7091603181480834472
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Item'
                            example:
                                damage: 3901165175170929783
                                description: Voluptate consequatur omnis consequatur exercitationem soluta.
                                healing: 5206756699392252429
                                id: Eveniet velit quod accusamus natus non.
                                name: Eum repudiandae.
                                protection: 2569464386441326293
                "400":
                    description: 'create_duplicated_name: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Ducimus consequatur fugiat temporibus.
    /item/{id}:
        delete:
            tags:
                - EntryItemService
            summary: deleteItem EntryItemService
            operationId: EntryItemService#deleteItem
            parameters:
                - name: id
                  in: path
                  description: UUId of the item
                  required: true
                  schema:
                    type: string
                    description: UUId of the item
                    example: Aliquam laboriosam asperiores.
                  example: In sequi in.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: integer
                                example: 8768204006670002611
                                format: int64
                            example: 153786168126883794
                "400":
                    description: 'delete_no_criteria: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Rem et qui dolores aut ea non.
                "404":
                    description: 'delete_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Rerum praesentium ut dolor.
        patch:
            tags:
                - EntryItemService
            summary: updateItem EntryItemService
            operationId: EntryItemService#updateItem
            parameters:
                - name: id
                  in: path
                  description: UUId of the item
                  required: true
                  schema:
                    type: string
                    description: UUId of the item
                    example: Reprehenderit totam voluptatem corporis.
                  example: Rem minus suscipit nihil.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateItemRequestBody'
                        example:
                            damage: 3203299607339697376
                            description: Neque et.
                            healing: 7179661917089634877
                            protection: 8269874940287524892
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: integer
                                example: 7785505101233720605
                                format: int64
                            example: 8683973959481838150
                "400":
                    description: 'update_invalid_args: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Eos consequatur.
                "404":
                    description: 'update_no_match: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quo unde recusandae velit optio quam.
components:
    schemas:
        Character:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the character
                    example: Aliquam dicta qui.
                experience:
                    type: integer
                    description: The amount of experience value of the character
                    example: 5279517397638910157
                    format: int64
                health:
                    type: integer
                    description: The amount of health value of the character
                    example: 1997751368163690732
                    format: int64
                id:
                    type: string
                    description: UUId of the character
                    example: Eaque quo quod.
                inventoryId:
                    type: string
                    description: UUId of the inventory record
                    example: Quod dolorem.
                name:
                    type: string
                    description: Name of the character
                    example: Praesentium iure omnis.
            example:
                description: Magnam occaecati dolor vel.
                experience: 2029506144581947099
                health: 5498140684395196341
                id: Minus cumque quaerat quia porro porro fuga.
                inventoryId: Et quidem quibusdam.
                name: Voluptas voluptatem consequatur repellendus aliquid et harum.
            required:
                - id
                - name
                - description
                - health
                - experience
                - inventoryId
        CreateCharacterRequestBody:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the Character
                    example: Suscipit sit natus.
                name:
                    type: string
                    description: Name of the Character
                    example: Aut recusandae molestiae sit.
            example:
                description: Similique molestiae officia ea ipsum dolores omnis.
                name: Veritatis eum maxime neque quo.
            required:
                - name
        CreateItemRequestBody:
            type: object
            properties:
                damage:
                    type: integer
                    description: The amount of damage the item can do
                    example: 6091669431511271155
                    format: int64
                description:
                    type: string
                    description: Description of the item
                    example: Quo quasi ut distinctio mollitia.
                healing:
                    type: integer
                    description: The amount of healing the item can do
                    example: 6819395025011835073
                    format: int64
                name:
                    type: string
                    description: name of the item
                    example: Qui eaque quidem.
                protection:
                    type: integer
                    description: The amount of protection the item can do
                    example: 3038747017978127650
                    format: int64
            example:
                damage: 6404216896711613122
                description: Ut laboriosam qui quos.
                healing: 1427117095187337709
                name: Ipsam officiis aut voluptatum.
                protection: 424000276647839486
            required:
                - name
                - description
                - damage
                - healing
                - protection
        Inventory:
            type: object
            properties:
                id:
                    type: string
                    description: UUId of the inventory
                    example: Dolor expedita.
                itemsId:
                    type: array
                    items:
                        type: string
                        example: Ullam vitae possimus ducimus magni et.
                    description: Array of uuid of items
                    example:
                        - Voluptatem ut nemo ab tempora iure sunt.
                        - A facere harum quas aliquam nostrum consectetur.
                userId:
                    type: string
                    description: UUId of the character that this inventory belongs to
                    example: Veniam eum aut cumque.
            example:
                id: Est eum deleniti dolores qui ab et.
                itemsId:
                    - Repellat ex dolore quia molestiae et ad.
                    - Eum consectetur.
                    - Neque quas.
                userId: Voluptatem suscipit rerum eligendi.
            required:
                - id
                - userId
        Item:
            type: object
            properties:
                damage:
                    type: integer
                    description: The amount of damage the item can do
                    example: 4723208021508182094
                    format: int64
                description:
                    type: string
                    description: Description of the item
                    example: Cumque ea quo aut.
                healing:
                    type: integer
                    description: The amount of healing the item can do
                    example: 3324003565343799983
                    format: int64
                id:
                    type: string
                    description: UUId of the item
                    example: Dolores laboriosam sed.
                name:
                    type: string
                    description: name of the item
                    example: Cum ipsum autem qui perspiciatis.
                protection:
                    type: integer
                    description: The amount of protection the item can do
                    example: 2255336337640910560
                    format: int64
            example:
                damage: 2646041842594261051
                description: Et sed qui.
                healing: 885852020221495776
                id: Commodi aut atque voluptates deserunt rem facere.
                name: Enim recusandae.
                protection: 6155563284703613456
            required:
                - id
                - name
                - description
                - damage
                - healing
                - protection
        UpdateCharacterRequestBody:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the Character
                    example: Facere aut dolor.
                experience:
                    type: integer
                    description: The amount of experience value of the Character
                    example: 1451882900716250803
                    format: int64
                health:
                    type: integer
                    description: The amount of health value of the Character
                    example: 9033135460609566161
                    format: int64
                name:
                    type: string
                    description: Name of the Character
                    example: Unde et molestias ea modi sit.
            example:
                description: Aliquam aut repudiandae et.
                experience: 3280542176385847728
                health: 7320803378756559932
                name: Nihil fugiat aut.
        UpdateInventoryRequestBody:
            type: object
            properties:
                itemsId:
                    type: array
                    items:
                        type: string
                        example: Eum libero nisi nisi iure dicta.
                    description: Array of uuid of items
                    example:
                        - Earum quisquam animi.
                        - Vel ut.
            example:
                itemsId:
                    - Nisi alias ab et.
                    - Velit iusto velit.
            required:
                - itemsId
        UpdateItemRequestBody:
            type: object
            properties:
                damage:
                    type: integer
                    description: The amount of damage the item can do
                    example: 3163530541029288893
                    format: int64
                description:
                    type: string
                    description: Description of the item
                    example: Expedita est et.
                healing:
                    type: integer
                    description: The amount of healing the item can do
                    example: 8639651129734090640
                    format: int64
                protection:
                    type: integer
                    description: The amount of protection the item can do
                    example: 6562927741264547420
                    format: int64
            example:
                damage: 5324224012261769472
                description: Molestiae quibusdam ut voluptatibus maiores.
                healing: 6265304869675842764
                protection: 3441747299886222017
tags:
    - name: EntryCharacterService
      description: The entry character service communicates with characters microservice.
    - name: EntryInventoryService
      description: The entry inventory service communicates with inventory microservice.
    - name: EntryItemService
      description: The entry item service communicates with items microservice.
