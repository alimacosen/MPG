// Code generated by goa v3.11.3, DO NOT EDIT.
//
// EntryItemService HTTP client types
//
// Command:
// $ goa gen mpg/entry/design

package client

import (
	entryitemservice "mpg/entry/gen/entry_item_service"

	goa "goa.design/goa/v3/pkg"
)

// CreateItemRequestBody is the type of the "EntryItemService" service
// "createItem" endpoint HTTP request body.
type CreateItemRequestBody struct {
	// name of the item
	Name string `form:"name" json:"name" xml:"name"`
	// Description of the item
	Description string `form:"description" json:"description" xml:"description"`
	// The amount of damage the item can do
	Damage int `form:"damage" json:"damage" xml:"damage"`
	// The amount of healing the item can do
	Healing int `form:"healing" json:"healing" xml:"healing"`
	// The amount of protection the item can do
	Protection int `form:"protection" json:"protection" xml:"protection"`
}

// UpdateItemRequestBody is the type of the "EntryItemService" service
// "updateItem" endpoint HTTP request body.
type UpdateItemRequestBody struct {
	// name of the item
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Description of the item
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// The amount of damage the item can do
	Damage *int `form:"damage,omitempty" json:"damage,omitempty" xml:"damage,omitempty"`
	// The amount of healing the item can do
	Healing *int `form:"healing,omitempty" json:"healing,omitempty" xml:"healing,omitempty"`
	// The amount of protection the item can do
	Protection *int `form:"protection,omitempty" json:"protection,omitempty" xml:"protection,omitempty"`
}

// CreateItemResponseBody is the type of the "EntryItemService" service
// "createItem" endpoint HTTP response body.
type CreateItemResponseBody struct {
	// UUId of the item
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// name of the item
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Description of the item
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// The amount of damage the item can do
	Damage *int `form:"damage,omitempty" json:"damage,omitempty" xml:"damage,omitempty"`
	// The amount of healing the item can do
	Healing *int `form:"healing,omitempty" json:"healing,omitempty" xml:"healing,omitempty"`
	// The amount of protection the item can do
	Protection *int `form:"protection,omitempty" json:"protection,omitempty" xml:"protection,omitempty"`
}

// GetItemsResponseBody is the type of the "EntryItemService" service
// "getItems" endpoint HTTP response body.
type GetItemsResponseBody []*ItemResponse

// ItemResponse is used to define fields on response body types.
type ItemResponse struct {
	// UUId of the item
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// name of the item
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Description of the item
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// The amount of damage the item can do
	Damage *int `form:"damage,omitempty" json:"damage,omitempty" xml:"damage,omitempty"`
	// The amount of healing the item can do
	Healing *int `form:"healing,omitempty" json:"healing,omitempty" xml:"healing,omitempty"`
	// The amount of protection the item can do
	Protection *int `form:"protection,omitempty" json:"protection,omitempty" xml:"protection,omitempty"`
}

// NewCreateItemRequestBody builds the HTTP request body from the payload of
// the "createItem" endpoint of the "EntryItemService" service.
func NewCreateItemRequestBody(p *entryitemservice.CreateItemPayload) *CreateItemRequestBody {
	body := &CreateItemRequestBody{
		Name:        p.Name,
		Description: p.Description,
		Damage:      p.Damage,
		Healing:     p.Healing,
		Protection:  p.Protection,
	}
	return body
}

// NewUpdateItemRequestBody builds the HTTP request body from the payload of
// the "updateItem" endpoint of the "EntryItemService" service.
func NewUpdateItemRequestBody(p *entryitemservice.UpdateItemPayload) *UpdateItemRequestBody {
	body := &UpdateItemRequestBody{
		Name:        p.Name,
		Description: p.Description,
		Damage:      p.Damage,
		Healing:     p.Healing,
		Protection:  p.Protection,
	}
	return body
}

// NewCreateItemItemOK builds a "EntryItemService" service "createItem"
// endpoint result from a HTTP "OK" response.
func NewCreateItemItemOK(body *CreateItemResponseBody) *entryitemservice.Item {
	v := &entryitemservice.Item{
		ID:          *body.ID,
		Name:        *body.Name,
		Description: *body.Description,
		Damage:      *body.Damage,
		Healing:     *body.Healing,
		Protection:  *body.Protection,
	}

	return v
}

// NewCreateItemCreateDuplicatedName builds a EntryItemService service
// createItem endpoint create_duplicated_name error.
func NewCreateItemCreateDuplicatedName(body string) entryitemservice.CreateDuplicatedName {
	v := entryitemservice.CreateDuplicatedName(body)

	return v
}

// NewCreateItemCreateInvalidArgs builds a EntryItemService service createItem
// endpoint create_invalid_args error.
func NewCreateItemCreateInvalidArgs(body string) entryitemservice.CreateInvalidArgs {
	v := entryitemservice.CreateInvalidArgs(body)

	return v
}

// NewCreateItemCreateNoCriteria builds a EntryItemService service createItem
// endpoint create_no_criteria error.
func NewCreateItemCreateNoCriteria(body string) entryitemservice.CreateNoCriteria {
	v := entryitemservice.CreateNoCriteria(body)

	return v
}

// NewGetItemsItemOK builds a "EntryItemService" service "getItems" endpoint
// result from a HTTP "OK" response.
func NewGetItemsItemOK(body []*ItemResponse) []*entryitemservice.Item {
	v := make([]*entryitemservice.Item, len(body))
	for i, val := range body {
		v[i] = unmarshalItemResponseToEntryitemserviceItem(val)
	}

	return v
}

// NewGetItemsGetInvalidArgs builds a EntryItemService service getItems
// endpoint get_invalid_args error.
func NewGetItemsGetInvalidArgs(body string) entryitemservice.GetInvalidArgs {
	v := entryitemservice.GetInvalidArgs(body)

	return v
}

// NewGetItemsGetNoCriteria builds a EntryItemService service getItems endpoint
// get_no_criteria error.
func NewGetItemsGetNoCriteria(body string) entryitemservice.GetNoCriteria {
	v := entryitemservice.GetNoCriteria(body)

	return v
}

// NewGetItemsGetNoMatch builds a EntryItemService service getItems endpoint
// get_no_match error.
func NewGetItemsGetNoMatch(body string) entryitemservice.GetNoMatch {
	v := entryitemservice.GetNoMatch(body)

	return v
}

// NewUpdateItemUpdateInvalidArgs builds a EntryItemService service updateItem
// endpoint update_invalid_args error.
func NewUpdateItemUpdateInvalidArgs(body string) entryitemservice.UpdateInvalidArgs {
	v := entryitemservice.UpdateInvalidArgs(body)

	return v
}

// NewUpdateItemUpdateNoCriteria builds a EntryItemService service updateItem
// endpoint update_no_criteria error.
func NewUpdateItemUpdateNoCriteria(body string) entryitemservice.UpdateNoCriteria {
	v := entryitemservice.UpdateNoCriteria(body)

	return v
}

// NewUpdateItemUpdateNoMatch builds a EntryItemService service updateItem
// endpoint update_no_match error.
func NewUpdateItemUpdateNoMatch(body string) entryitemservice.UpdateNoMatch {
	v := entryitemservice.UpdateNoMatch(body)

	return v
}

// NewDeleteItemDeleteInvalidArgs builds a EntryItemService service deleteItem
// endpoint delete_invalid_args error.
func NewDeleteItemDeleteInvalidArgs(body string) entryitemservice.DeleteInvalidArgs {
	v := entryitemservice.DeleteInvalidArgs(body)

	return v
}

// NewDeleteItemDeleteNoCriteria builds a EntryItemService service deleteItem
// endpoint delete_no_criteria error.
func NewDeleteItemDeleteNoCriteria(body string) entryitemservice.DeleteNoCriteria {
	v := entryitemservice.DeleteNoCriteria(body)

	return v
}

// NewDeleteItemDeleteNoMatch builds a EntryItemService service deleteItem
// endpoint delete_no_match error.
func NewDeleteItemDeleteNoMatch(body string) entryitemservice.DeleteNoMatch {
	v := entryitemservice.DeleteNoMatch(body)

	return v
}

// ValidateCreateItemResponseBody runs the validations defined on
// CreateItemResponseBody
func ValidateCreateItemResponseBody(body *CreateItemResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Description == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("description", "body"))
	}
	if body.Damage == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("damage", "body"))
	}
	if body.Healing == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("healing", "body"))
	}
	if body.Protection == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("protection", "body"))
	}
	return
}

// ValidateItemResponse runs the validations defined on ItemResponse
func ValidateItemResponse(body *ItemResponse) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Description == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("description", "body"))
	}
	if body.Damage == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("damage", "body"))
	}
	if body.Healing == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("healing", "body"))
	}
	if body.Protection == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("protection", "body"))
	}
	return
}
