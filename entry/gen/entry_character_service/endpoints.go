// Code generated by goa v3.11.3, DO NOT EDIT.
//
// EntryCharacterService endpoints
//
// Command:
// $ goa gen mpg/entry/design

package entrycharacterservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "EntryCharacterService" service endpoints.
type Endpoints struct {
	CreatCharacter  goa.Endpoint
	GetCharacter    goa.Endpoint
	UpdateCharacter goa.Endpoint
	DeleteCharacter goa.Endpoint
}

// NewEndpoints wraps the methods of the "EntryCharacterService" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreatCharacter:  NewCreatCharacterEndpoint(s),
		GetCharacter:    NewGetCharacterEndpoint(s),
		UpdateCharacter: NewUpdateCharacterEndpoint(s),
		DeleteCharacter: NewDeleteCharacterEndpoint(s),
	}
}

// Use applies the given middleware to all the "EntryCharacterService" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreatCharacter = m(e.CreatCharacter)
	e.GetCharacter = m(e.GetCharacter)
	e.UpdateCharacter = m(e.UpdateCharacter)
	e.DeleteCharacter = m(e.DeleteCharacter)
}

// NewCreatCharacterEndpoint returns an endpoint function that calls the method
// "creatCharacter" of service "EntryCharacterService".
func NewCreatCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreatCharacterPayload)
		return s.CreatCharacter(ctx, p)
	}
}

// NewGetCharacterEndpoint returns an endpoint function that calls the method
// "getCharacter" of service "EntryCharacterService".
func NewGetCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetCharacterPayload)
		return s.GetCharacter(ctx, p)
	}
}

// NewUpdateCharacterEndpoint returns an endpoint function that calls the
// method "updateCharacter" of service "EntryCharacterService".
func NewUpdateCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateCharacterPayload)
		return s.UpdateCharacter(ctx, p)
	}
}

// NewDeleteCharacterEndpoint returns an endpoint function that calls the
// method "deleteCharacter" of service "EntryCharacterService".
func NewDeleteCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteCharacterPayload)
		return s.DeleteCharacter(ctx, p)
	}
}
