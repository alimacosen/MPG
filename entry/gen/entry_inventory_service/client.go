// Code generated by goa v3.11.3, DO NOT EDIT.
//
// EntryInventoryService client
//
// Command:
// $ goa gen mpg/entry/design

package entryinventoryservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "EntryInventoryService" service client.
type Client struct {
	GetInventoryEndpoint    goa.Endpoint
	UpdateInventoryEndpoint goa.Endpoint
}

// NewClient initializes a "EntryInventoryService" service client given the
// endpoints.
func NewClient(getInventory, updateInventory goa.Endpoint) *Client {
	return &Client{
		GetInventoryEndpoint:    getInventory,
		UpdateInventoryEndpoint: updateInventory,
	}
}

// GetInventory calls the "getInventory" endpoint of the
// "EntryInventoryService" service.
// GetInventory may return the following errors:
//   - "get_no_match" (type GetNoMatch)
//   - "get_no_criteria" (type GetNoCriteria)
//   - "get_invalid_args" (type GetInvalidArgs)
//   - error: internal error
func (c *Client) GetInventory(ctx context.Context, p *GetInventoryPayload) (res *Inventory, err error) {
	var ires any
	ires, err = c.GetInventoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Inventory), nil
}

// UpdateInventory calls the "updateInventory" endpoint of the
// "EntryInventoryService" service.
// UpdateInventory may return the following errors:
//   - "update_no_criteria" (type UpdateNoCriteria)
//   - "update_invalid_args" (type UpdateInvalidArgs)
//   - "update_no_match" (type UpdateNoMatch)
//   - error: internal error
func (c *Client) UpdateInventory(ctx context.Context, p *UpdateInventoryPayload) (res int, err error) {
	var ires any
	ires, err = c.UpdateInventoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}
